{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "ExecuteMsg",
  "oneOf": [
    {
      "type": "object",
      "required": [
        "list_nft"
      ],
      "properties": {
        "list_nft": {
          "type": "object",
          "required": [
            "auction_config",
            "auction_type_id",
            "contract_address",
            "token_id"
          ],
          "properties": {
            "auction_config": {
              "$ref": "#/definitions/AuctionConfig"
            },
            "auction_type_id": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "contract_address": {
              "type": "string"
            },
            "token_id": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "edit_listing"
      ],
      "properties": {
        "edit_listing": {
          "type": "object",
          "required": [
            "auction_config",
            "auction_type_id",
            "contract_address",
            "token_id"
          ],
          "properties": {
            "auction_config": {
              "$ref": "#/definitions/AuctionConfig"
            },
            "auction_type_id": {
              "type": "integer",
              "format": "uint32",
              "minimum": 0.0
            },
            "contract_address": {
              "type": "string"
            },
            "token_id": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "buy"
      ],
      "properties": {
        "buy": {
          "type": "object",
          "required": [
            "contract_address",
            "token_id"
          ],
          "properties": {
            "contract_address": {
              "type": "string"
            },
            "token_id": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "type": "object",
      "required": [
        "cancel"
      ],
      "properties": {
        "cancel": {
          "type": "object",
          "required": [
            "contract_address",
            "token_id"
          ],
          "properties": {
            "contract_address": {
              "type": "string"
            },
            "token_id": {
              "type": "string"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "AuctionConfig": {
      "oneOf": [
        {
          "type": "object",
          "required": [
            "FixedPrice"
          ],
          "properties": {
            "FixedPrice": {
              "type": "object",
              "required": [
                "price"
              ],
              "properties": {
                "price": {
                  "$ref": "#/definitions/Coin"
                }
              }
            }
          },
          "additionalProperties": false
        },
        {
          "type": "object",
          "required": [
            "Other"
          ],
          "properties": {
            "Other": {
              "type": "object",
              "required": [
                "config"
              ],
              "properties": {
                "config": {
                  "type": "string"
                }
              }
            }
          },
          "additionalProperties": false
        }
      ]
    },
    "Coin": {
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "type": "string"
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
